/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filmgui;
import BDUtilities.BDUtilities;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.table.AbstractTableModel;
/**
 *
 * @author 'Toine
 */
public class FilmGui extends javax.swing.JFrame {

    BDUtilities uti;
    String ip;
    int port;
    /**
     * Creates new form FilmGui
     */
    public FilmGui() {
        try {
            initComponents();
            ip = "127.0.0.1";
            port = 1521;
            uti = new BDUtilities(ip,port);
        } catch (Exception ex) {
            Logger.getLogger(FilmGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titreLabel = new javax.swing.JLabel();
        artistLabel = new javax.swing.JLabel();
        identifiantLabel = new javax.swing.JLabel();
        titreTF = new javax.swing.JTextField();
        artistTF = new javax.swing.JTextField();
        identifiantTF = new javax.swing.JTextField();
        resultScrollPanel = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        rechercheButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titreLabel.setText("Recherche Titre:");

        artistLabel.setText("Recherche Artist:");

        identifiantLabel.setText("Recherche Identifiant");

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        resultScrollPanel.setViewportView(resultTable);

        rechercheButton.setText("Recherche");
        rechercheButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechercheButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultScrollPanel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(titreTF)
                            .addComponent(titreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(artistTF)
                            .addComponent(artistLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(identifiantTF)
                            .addComponent(identifiantLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(rechercheButton, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(407, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titreLabel)
                    .addComponent(artistLabel)
                    .addComponent(identifiantLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titreTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(artistTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(identifiantTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(rechercheButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rechercheButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechercheButtonMouseClicked
        // TODO add your handling code here:
        String rechercheStr=null;
        String tmpStr=null;
        String[] rechStr=null;
        StringTokenizer strTok;
        JTextField curField=null;
        
        if(! titreTF.equals(""))
        {
            curField = titreTF;
        }
        if(! artistTF.equals(""))
        {
            curField = titreTF;
        }
        if(! identifiantTF.equals(""))
        {
            curField = titreTF;
        }
        
        rechercheStr = curField.getText();
        strTok = new StringTokenizer(rechercheStr);
        rechStr = new String[strTok.countTokens()];
        for(int i=0; i<strTok.countTokens();i++)
        {
            rechStr[i]= strTok.nextToken();
        }
        //recherche
        ResultSet rs=null;
        try {
            rs = uti.query("");
        } catch (SQLException ex) {
            Logger.getLogger(FilmGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //affichage
        MyTableModel mtm = new MyTableModel(rs);
    }//GEN-LAST:event_rechercheButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilmGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilmGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilmGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilmGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FilmGui().setVisible(true);
            }
        });
    }
    class MyTableModel extends AbstractTableModel {
        private final String[] tableHeaders;
        ResultSet rs;
        ResultSetMetaData rsmd;

        public MyTableModel(ResultSet prs){
            rs = prs;
            try {
                rsmd = rs.getMetaData();
            } catch (SQLException ex) {
                Logger.getLogger(MyTableModel.class.getName()).log(Level.SEVERE, null, ex);
            }
            tableHeaders = new String[getColumnCount()];
            for(int i = 0; i < getColumnCount(); i++)
            {
                try {
                    tableHeaders[i] = rsmd.getColumnName(i+1);
                } catch (SQLException ex) {
                    Logger.getLogger(MyTableModel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        @Override
        public String getColumnName(int columnIndex) {
            return tableHeaders[columnIndex];
        }
 
        @Override
        public int getRowCount(){
            int ret = 0;
            try {
                ret = ( rs.last() ? rs.getRow() : 0);
            } catch (SQLException ex) {
                Logger.getLogger(MyTableModel.class.getName()).log(Level.SEVERE, null, ex);
            }
            return ret;
        }

        @Override
        public int getColumnCount(){
            try {
                return rsmd.getColumnCount();
            } catch (SQLException ex) {
                Logger.getLogger(MyTableModel.class.getName()).log(Level.SEVERE, null, ex);
            }
            return 0;
        }

        @Override
        public Object getValueAt(int row, int column){
            
            Object myObj = null;
            try {
                rs.absolute(row+1);
                myObj = rs.getObject(column+1);
            } catch (SQLException ex) {
                Logger.getLogger(MyTableModel.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(myObj == null)
                return "NULL";
            return myObj;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel artistLabel;
    private javax.swing.JTextField artistTF;
    private javax.swing.JLabel identifiantLabel;
    private javax.swing.JTextField identifiantTF;
    private javax.swing.JButton rechercheButton;
    private javax.swing.JScrollPane resultScrollPanel;
    private javax.swing.JTable resultTable;
    private javax.swing.JLabel titreLabel;
    private javax.swing.JTextField titreTF;
    // End of variables declaration//GEN-END:variables
}
